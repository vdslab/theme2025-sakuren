import os
import json
import subprocess
import tempfile
from pathlib import Path
from shutil import *
from collections import defaultdict

# ✅ ユーザーが設定する項目
data_path = "create_map/merge/municipalities_merge_test.geojson"  # 入力データ（日本全国のGeoJSON）
output_dir = "create_map/merge/output"  # 出力先ディレクトリ
target_list = {
    "札幌市",
    "石狩郡",
    "松前郡",
    "上磯郡",
    "亀田郡",
    "茅部郡",
    "二海郡",
    "山越郡",
    "檜山郡",
    "爾志郡",
    "奥尻郡",
    "瀬棚郡",
    "久遠郡",
    "島牧郡",
    "寿都郡",
    "磯谷郡",
    "虻田郡",
    "岩内郡",
    "古宇郡",
    "積丹郡",
    "古平郡",
    "余市郡",
    "空知郡",
    "夕張郡",
    "樺戸郡",
    "雨竜郡",
    "上川郡",
    "勇払郡",
    "中川郡",
    "増毛郡",
    "留萌郡",
    "苫前郡",
    "天塩郡",
    "宗谷郡",
    "枝幸郡",
    "礼文郡",
    "利尻郡",
    "網走郡",
    "斜里郡",
    "常呂郡",
    "紋別郡",
    "有珠郡",
    "白老郡",
    "沙流郡",
    "新冠郡",
    "浦河郡",
    "様似郡",
    "幌泉郡",
    "日高郡",
    "河東郡",
    "河西郡",
    "広尾郡",
    "足寄郡",
    "十勝郡",
    "釧路郡",
    "厚岸郡",
    "川上郡",
    "阿寒郡",
    "白糠郡",
    "野付郡",
    "標津郡",
    "目梨郡",
    "東津軽郡",
    "西津軽郡",
    "中津軽郡",
    "南津軽郡",
    "北津軽郡",
    "上北郡",
    "下北郡",
    "三戸郡",
    "岩手郡",
    "紫波郡",
    "和賀郡",
    "胆沢郡",
    "西磐井郡",
    "気仙郡",
    "上閉伊郡",
    "下閉伊郡",
    "九戸郡",
    "二戸郡",
    "仙台市",
    "刈田郡",
    "柴田郡",
    "伊具郡",
    "亘理郡",
    "宮城郡",
    "黒川郡",
    "加美郡",
    "遠田郡",
    "牡鹿郡",
    "本吉郡",
    "鹿角郡",
    "北秋田郡",
    "山本郡",
    "南秋田郡",
    "仙北郡",
    "雄勝郡",
    "東村山郡",
    "西村山郡",
    "北村山郡",
    "最上郡",
    "東置賜郡",
    "西置賜郡",
    "東田川郡",
    "飽海郡",
    "伊達郡",
    "安達郡",
    "岩瀬郡",
    "南会津郡",
    "耶麻郡",
    "河沼郡",
    "大沼郡",
    "西白河郡",
    "東白川郡",
    "石川郡",
    "田村郡",
    "双葉郡",
    "相馬郡",
    "東茨城郡",
    "那珂郡",
    "久慈郡",
    "稲敷郡",
    "結城郡",
    "猿島郡",
    "北相馬郡",
    "河内郡",
    "芳賀郡",
    "下都賀郡",
    "塩谷郡",
    "那須郡",
    "北群馬郡",
    "多野郡",
    "甘楽郡",
    "吾妻郡",
    "利根郡",
    "佐波郡",
    "邑楽郡",
    "さいたま市",
    "北足立郡",
    "入間郡",
    "比企郡",
    "秩父郡",
    "児玉郡",
    "大里郡",
    "南埼玉郡",
    "北葛飾郡",
    "千葉市",
    "印旛郡",
    "香取郡",
    "山武郡",
    "長生郡",
    "夷隅郡",
    "安房郡",
    "西多摩郡",
    "横浜市",
    "川崎市",
    "相模原市",
    "三浦郡",
    "高座郡",
    "中郡",
    "足柄上郡",
    "足柄下郡",
    "愛甲郡",
    "新潟市",
    "北蒲原郡",
    "西蒲原郡",
    "南蒲原郡",
    "東蒲原郡",
    "三島郡",
    "南魚沼郡",
    "中魚沼郡",
    "刈羽郡",
    "岩船郡",
    "中新川郡",
    "下新川郡",
    "能美郡",
    "河北郡",
    "羽咋郡",
    "鹿島郡",
    "鳳珠郡",
    "吉田郡",
    "今立郡",
    "南条郡",
    "丹生郡",
    "三方郡",
    "大飯郡",
    "三方上中郡",
    "西八代郡",
    "南巨摩郡",
    "中巨摩郡",
    "南都留郡",
    "北都留郡",
    "南佐久郡",
    "北佐久郡",
    "小県郡",
    "諏訪郡",
    "上伊那郡",
    "下伊那郡",
    "木曽郡",
    "東筑摩郡",
    "北安曇郡",
    "埴科郡",
    "上高井郡",
    "下高井郡",
    "上水内郡",
    "下水内郡",
    "羽島郡",
    "養老郡",
    "不破郡",
    "安八郡",
    "揖斐郡",
    "本巣郡",
    "加茂郡",
    "可児郡",
    "大野郡",
    "静岡市",
    "浜松市",
    "賀茂郡",
    "田方郡",
    "駿東郡",
    "榛原郡",
    "周智郡",
    "名古屋市",
    "愛知郡",
    "西春日井郡",
    "丹羽郡",
    "海部郡",
    "知多郡",
    "額田郡",
    "北設楽郡",
    "桑名郡",
    "員弁郡",
    "三重郡",
    "多気郡",
    "度会郡",
    "北牟婁郡",
    "南牟婁郡",
    "蒲生郡",
    "犬上郡",
    "京都市",
    "乙訓郡",
    "久世郡",
    "綴喜郡",
    "相楽郡",
    "船井郡",
    "与謝郡",
    "大阪市",
    "堺市",
    "豊能郡",
    "泉北郡",
    "泉南郡",
    "南河内郡",
    "神戸市",
    "川辺郡",
    "多可郡",
    "加古郡",
    "神崎郡",
    "揖保郡",
    "赤穂郡",
    "佐用郡",
    "美方郡",
    "山辺郡",
    "生駒郡",
    "磯城郡",
    "宇陀郡",
    "高市郡",
    "北葛城郡",
    "吉野郡",
    "海草郡",
    "伊都郡",
    "有田郡",
    "西牟婁郡",
    "東牟婁郡",
    "岩美郡",
    "八頭郡",
    "東伯郡",
    "西伯郡",
    "日野郡",
    "仁多郡",
    "飯石郡",
    "邑智郡",
    "鹿足郡",
    "隠岐郡",
    "岡山市",
    "和気郡",
    "都窪郡",
    "浅口郡",
    "小田郡",
    "真庭郡",
    "苫田郡",
    "勝田郡",
    "英田郡",
    "久米郡",
    "加賀郡",
    "広島市",
    "安芸郡",
    "山県郡",
    "豊田郡",
    "世羅郡",
    "神石郡",
    "大島郡",
    "玖珂郡",
    "熊毛郡",
    "阿武郡",
    "勝浦郡",
    "名東郡",
    "名西郡",
    "那賀郡",
    "板野郡",
    "美馬郡",
    "三好郡",
    "小豆郡",
    "木田郡",
    "香川郡",
    "綾歌郡",
    "仲多度郡",
    "越智郡",
    "上浮穴郡",
    "伊予郡",
    "喜多郡",
    "西宇和郡",
    "北宇和郡",
    "南宇和郡",
    "長岡郡",
    "土佐郡",
    "吾川郡",
    "高岡郡",
    "幡多郡",
    "北九州市",
    "福岡市",
    "糟屋郡",
    "遠賀郡",
    "鞍手郡",
    "嘉穂郡",
    "朝倉郡",
    "三井郡",
    "三潴郡",
    "八女郡",
    "田川郡",
    "京都郡",
    "築上郡",
    "神埼郡",
    "三養基郡",
    "東松浦郡",
    "西松浦郡",
    "杵島郡",
    "藤津郡",
    "西彼杵郡",
    "東彼杵郡",
    "北松浦郡",
    "南松浦郡",
    "熊本市",
    "下益城郡",
    "玉名郡",
    "菊池郡",
    "阿蘇郡",
    "上益城郡",
    "八代郡",
    "葦北郡",
    "球磨郡",
    "天草郡",
    "東国東郡",
    "速見郡",
    "玖珠郡",
    "北諸県郡",
    "西諸県郡",
    "東諸県郡",
    "児湯郡",
    "東臼杵郡",
    "西臼杵郡",
    "鹿児島郡",
    "薩摩郡",
    "出水郡",
    "姶良郡",
    "曽於郡",
    "肝属郡",
    "国頭郡",
    "中頭郡",
    "島尻郡",
    "宮古郡",
    "八重山郡",
}  # 処理対象の市区町村名リスト

os.makedirs(output_dir, exist_ok=True)

# 元データを一時ファイルにコピー
current_geojson = tempfile.NamedTemporaryFile(delete=False, suffix=".geojson")
copy(data_path, current_geojson.name)

for city_name in target_list:
    print(f"▶ 処理中: {city_name}")

    # 読み込み用ファイル
    tmp_in = tempfile.NamedTemporaryFile(delete=False, suffix=".geojson")
    tmp_out_city = tempfile.NamedTemporaryFile(delete=False, suffix=".geojson")
    move(current_geojson.name, tmp_in.name)

    # --- Step 1: 対象市の最初の properties を取得 ---
    with open(tmp_in.name, encoding="utf-8") as f:
        data = json.load(f)

    first_props = None
    for feature in data["features"]:
        if feature["properties"].get("N03_003") == city_name:
            first_props = feature["properties"]
            break

    if not first_props:
        print(f"⚠ 対象市 '{city_name}' が見つかりませんでした。スキップします。")
        current_geojson = tempfile.NamedTemporaryFile(delete=False, suffix=".geojson")
        move(tmp_in.name, current_geojson.name)
        continue

    # --- Step 2: dissolve で結合（属性なし） ---
    dissolve_cmd = f"""
    mapshaper -quiet -i {tmp_in.name} \
      -filter 'N03_003 === "{city_name}"' \
      -dissolve copy-fields=no \
      -o format=geojson {tmp_out_city.name}
    """
    subprocess.run(dissolve_cmd, shell=True, check=True)

    # --- Step 3: プロパティを挿入 ---
    with open(tmp_out_city.name, encoding="utf-8") as f:
        city_data = json.load(f)

    if city_data["features"]:
        city_data["features"][0]["properties"] = first_props
    else:
        print(f"⚠ '{city_name}' の dissolve 結果に features が存在しません。")
        continue

    final_city_path = os.path.join(output_dir, f"{city_name}.geojson")
    with open(final_city_path, "w", encoding="utf-8") as f:
        json.dump(city_data, f, ensure_ascii=False)

    print(f"✅ {city_name} 保存完了: {final_city_path}")

    # --- Step 4: 元データから市を除いたファイルを次のループ用に保存 ---
    tmp_out_rest = tempfile.NamedTemporaryFile(delete=False, suffix=".geojson")
    filter_rest_cmd = f"""
    mapshaper -quiet -i {tmp_in.name} \
      -filter 'N03_003 !== "{city_name}"' \
      -o format=geojson {tmp_out_rest.name}
    """
    subprocess.run(filter_rest_cmd, shell=True, check=True)

    current_geojson = tempfile.NamedTemporaryFile(delete=False, suffix=".geojson")
    move(tmp_out_rest.name, current_geojson.name)

print("✅ 全ての処理が完了しました。")
